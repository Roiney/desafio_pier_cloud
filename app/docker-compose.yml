version: "3.9"
services:
  job:
    build: ./job
    ports:
      - 3002:3001 # Alterada para evitar conflito com `worker`
    working_dir: /app-job
    depends_on:
      worker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      timeout: 10s
      retries: 5
    networks:
      - app-network

  worker:
    container_name: app_worker
    build: ./worker
    ports:
      - 3001:3001
    working_dir: /app-worker
    command: bash -c "yarn prisma db push && yarn start:dev"
    volumes:
      - ./worker/src:/app-worker/src
    depends_on:
      db_store:
        condition: service_healthy
    environment:
      - APP_PORT=3001
      - JWT_SECRET=jwt_secret
      - DB_USER=${PG_USER_STORE}
      - DB_PASS=${PG_PASSWORD_STORE}
      - DB_HOST=db_store
      - DB_PORT=5432
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]
      timeout: 10s
      retries: 5
    networks:
      - app-network
      - postgres-network

  db_store:
    image: postgres:15.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=${PG_USER_STORE}
      - POSTGRES_PASSWORD=${PG_PASSWORD_STORE}
      - POSTGRES_DB=wavelight-Cloud
    container_name: postgres-wavelight-Cloud-store
    volumes:
      - ./pgdata_store:/var/lib/postgresql/data
    ports:
      - "3005:5432"
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER_STORE} -d ${PG_DATABASE} -h localhost"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE

networks:
  app-network:
  postgres-network:
